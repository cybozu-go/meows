name: main
on:
  pull_request:
  push:
    branches:
      - "main"
jobs:
  build:
    name: Build
    runs-on: ubuntu-24.04
    env:
      SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - run: make setup
      - run: make lint
      - run: make check-generate
      - run: make test
      - run: make build
      - run: make image
  kindtest:
    name: Run test on kind
    strategy:
      matrix:
        kind-image-ref:
          - "v1.31.6@sha256:37d52dc19f59394f9347b00547c3ed2d73eb301a60294b9b05fbe56fb6196517"
          - "v1.32.5@sha256:5d5a4d793d2a3d9727013b8b0cf6c95008c71abeb547759a273ef27e9c564984"
          - "v1.33.1@sha256:050072256b9a903bd914c0b2866828150cb229cea0efe5892e2b644d5dd3b34f"
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Extract kubernetes version from kind-image-ref
        id: k8s-version
        run: |
          KIND_IMAGE_REF="${{ matrix.kind-image-ref }}"
          VERSION=$(echo "$KIND_IMAGE_REF" | awk -F '[@v]' '{print $2}')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      - name: Configure GIT
        run: |
          git config --global user.email "example@example.com"
          git config --global user.name "ci-kindtest"
          echo '${{ secrets.TESTREPO_DEPLOY_KEY }}' > /tmp/deploy-key.pem
          chmod 600 /tmp/deploy-key.pem
      - name: Create secret files
        run: |
          echo '${{ secrets.APP_PRIVATE_KEY }}' > .secret.private-key.pem
          cat <<'EOF' > .secret.env.sh
          export GITHUB_APP_ID=${{ secrets.APP_ID }}
          export GITHUB_APP_INSTALLATION_ID=${{ secrets.APP_INSTALLATION_ID }}
          export SLACK_CHANNEL=${{ secrets.SLACK_CHANNEL }}
          export SLACK_APP_TOKEN=${{ secrets.SLACK_APP_TOKEN }}
          export SLACK_BOT_TOKEN=${{ secrets.SLACK_BOT_TOKEN }}
          EOF
      - name: Clean up unnecessary files
        run: |
          docker image prune -af
          sudo rm -rf /home/linuxbrew || true
          sudo rm -rf /opt/az || true
          sudo rm -rf /opt/microsoft || true
          sudo rm -rf /opt/pipx || true
          sudo rm -rf /opt/google || true
          sudo rm -rf /usr/share/dotnet || true
          sudo rm -rf /usr/local/lib/android || true
          sudo rm -rf /usr/local/share/boost || true
          sudo rm -rf /usr/lib/jvm || true
          sudo rm -rf /usr/share/swift || true
          sudo rm -rf /usr/local/julia* || true
          sudo rm -rf /usr/local/n || true
          sudo rm -rf /usr/share/kotlinc || true
          sudo rm -rf /usr/local/share/edge_driver || true
          sudo rm -rf /usr/local/share/chromedriver-linux64 || true
          sudo rm -rf /usr/local/share/gecko_driver || true
          sudo rm -rf /usr/share/miniconda || true
          sudo rm -rf /usr/local/share/phantomjs* || true
          sudo rm -rf /usr/share/sbt || true
          sudo rm -rf /usr/local/aws-cli || true
          sudo rm -rf /usr/local/aws-sam-cli || true
          sudo rm -rf /usr/local/sqlpackage || true
          sudo rm -rf /usr/local/bin/minikube || true
          sudo rm -rf /usr/local/bin/kustomize || true
          sudo rm -rf /usr/local/bin/kubectl || true
          sudo rm -rf /usr/local/bin/kind || true
          sudo rm -rf /usr/local/bin/helm || true
      - run: make setup KINDTEST_IMAGE_REF=${{ matrix.kind-image-ref }}
      - run: make -C kindtest start KINDTEST_IMAGE_REF=${{ matrix.kind-image-ref }}
      - run: make -C kindtest test
        env:
          GIT_SSH_COMMAND: "ssh -i /tmp/deploy-key.pem"
      - run: make -C kindtest logs
        if: always()

      - name: Check disk usage and docker images
        run: |
          df -h
          docker images
        if: always()
      - name: Check directory sizes
        run: sudo du -sh /usr/local/* /home/* /opt/* /tmp/* /usr/* /var/* | sort -hr
        if: always()

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: logs-${{ steps.k8s-version.outputs.version }}
          path: ./tmp/logs/
